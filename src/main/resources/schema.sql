DROP TABLE IF EXISTS mpa_ratings, genres, film_genres, film_likes, user_friends, films, users;

CREATE TABLE mpa_ratings (
	id TINYINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	name VARCHAR(10) NOT NULL UNIQUE
);

CREATE TABLE genres (
	id SMALLINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    description VARCHAR,
    release_date DATE,
    duration INTEGER,
    rate INTEGER,
    mpa_rating_id TINYINT,
    FOREIGN KEY (mpa_rating_id) REFERENCES mpa_ratings(id) ON DELETE CASCADE
);

CREATE TABLE users (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	email VARCHAR(100) NOT NULL UNIQUE,
	login VARCHAR(100) NOT NULL UNIQUE,
	name VARCHAR(255) NOT NULL,
	birthday DATE
);

CREATE TABLE film_genres (
	film_id INTEGER NOT NULL,
	genre_id SMALLINT,
	FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
	FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE,
	CONSTRAINT unique_film_genre_row_constraint UNIQUE (film_id, genre_id)
);

CREATE TABLE film_likes (
    film_id INTEGER NOT NULL,
	user_id BIGINT NOT NULL,
	FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
	CONSTRAINT unique_film_like_row_constraint UNIQUE (film_id, user_id)
);

CREATE TABLE user_friends (
	user_id BIGINT NOT NULL,
	friend_id BIGINT NOT NULL,
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
	FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE,
	CONSTRAINT unique_user_friend_row_constraint UNIQUE (user_id, friend_id)
);